{"version":3,"sources":["coordinateSystem.js","interactionStateMachine.js","makePassiveEventOption.js","canvasDrawIndex.js","drawImage.js","App.js","index.js"],"names":["NULL_VIEW_POINT","Object","freeze","x","y","untransformedX","untransformedY","NULL_BOUNDS","canvasWidth","canvasHeight","left","top","right","bottom","viewMin","viewMax","IDENTITY","a","b","c","d","e","f","CoordinateSystem","_ref","_this","this","scaleExtents","documentSize","_classCallCheck","_canvas","_view","scale","_viewChangeListeners","Set","setScale","setView","clampView","_ref2","_this$scaleExtents","min","max","_this$documentSize","width","height","_ref3","canvasRect","maxx","minx","maxy","miny","Math","resetView","view","newView","_objectSpread","_this$_view","forEach","listener","scaleAtClientPoint","deltaScale","clientPoint","viewPt","clientPointToViewPoint","clientPtPostScale","viewPointToClientPoint","clientX","clientY","_ref4","arguments","length","undefined","_ref5","relativeClientX","relativeClientY","_ref6","_ref7","relativeX","relativeY","attachViewChangeListener","add","_scaleExtents","_documentSize","_createClass","key","get","set","canvas","_ref8","_ref9","_this$_canvas$getBoun","getBoundingClientRect","SUPPRESS_SCROLL","preventDefault","DefaultState","_this2","handleMouseWheel","canvasDraw","_canvasDraw$props","props","disabled","enablePanAndZoom","mouseZoomFactor","DisabledState","handleDrawStart","console","log","controlPan","PanState","WaitForPinchState","handleDrawMove","_viewPointFromEvent","viewPointFromEvent","coordSystem","lazy","update","handleDrawEnd","_this3","_this4","bind","dragStart","clientPointFromEvent","panStart","_clientPointFromEvent","dx","dy","_this5","touches","ScaleOrPanState","DrawingState","clientPt","deferredPoints","push","Date","valueOf","startTimestamp","startClientPoint","abs","issueDeferredPoints","nextState","i","deferredPt","syntheticEvt","SyntheticEvent","_this6","start","getTouchMetrics","scaleStart","_this6$recentMetrics","recentMetrics","centroid","distance","TouchScaleState","TouchPanState","_clientPointFromEvent2","t1x","t1y","_clientPointFromEvent3","t2x","t2y","t1","t2","sqrt","scaleOrPanState","_this7","ref","_ref$recentMetrics","_this8","_ref$recentMetrics2","dScale","_this9","_viewPointFromEvent2","both","_viewPointFromEvent3","isDisabled","isEnabled","isDrawing","points","clampPointToDocument","brush","toObject","drawPoints","brushColor","brushRadius","saveLine","changedTouches","options","passive","window","addEventListener","removeEventListener","midPointBtw","p1","p2","canvasStyle","display","position","canvasTypes","penstate","CanvasDraw","_PureComponent","_possibleConstructorReturn","_getPrototypeOf","call","undo","lines","slice","erasedLines","pop","clearExceptErasedLines","simulateDrawingLines","immediate","triggerOnChange","eraseAll","_toConsumableArray","clear","getSaveData","JSON","stringify","getDataURL","fileType","useBgImage","backgroundColour","canvasToExport","drawing","context","getContext","storedImageData","getImageData","compositeOperation","globalCompositeOperation","imgSrc","drawImage","fillStyle","fillRect","imageData","toDataURL","concat","clearRect","putImageData","loadSaveData","saveData","immediateLoading","Error","_JSON$parse","parse","scaleX","scaleY","scaleAvg","map","line","p","componentWillUnmount","canvasObserver","unobserve","canvasContainer","CustomKeyDown","handleWheel","interactionSM","_assertThisInitialized","allowOnlyPointerType","pointerType","mouseHasMoved","applyView","ctx","name","clearWindow","m","transformMatrix","setTransform","deferRedrawOnViewChange","drawGrid","grid","redrawImage","loop","once","handleCanvasResize","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","_entry$contentRect","value","contentRect","setCanvasSize","interface","temp","err","point","clampLinesToDocument","image","complete","img","w","h","offsetX","offsetY","cx","cy","cw","ch","iw","ih","r","nw","nh","ar","curTime","timeoutGap","loadTimeOffset","_loop","setTimeout","style","lineJoin","lineCap","strokeStyle","lineWidth","moveTo","beginPath","len","midPoint","quadraticCurveTo","lineTo","closePath","fill","stroke","inClientSpace","onChange","valuesChanged","_ref4$once","pointer","getPointerCoordinates","getBrushCoordinates","drawInterface","requestAnimationFrame","ctxs","action","save","restore","Image","crossOrigin","onload","src","hideGrid","_this$coordSystem$can","canvasBounds","floor","setLineDash","gridColor","gridLineWidth","hideGridX","countX","gridSizeX","hideGridY","countY","gridSizeY","hideInterface","arc","PI","catenaryColor","state","controlPan2","zoomscale","catenary","Catenary","isPressing","zoomExtents","_inherits","LazyBrush","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","chainLength","ResizeObserver","observer","observe","initX","initY","prevProps","setRadius","React","createElement","Fragment","className","background","backgroundColor","touchAction","container","isInterface","styles","opacity","zIndex","onPointerDown","onPointerMove","onPointerUp","onPointerOut","onClick","setState","PureComponent","defaultProps","PanControl","refreshBackgroundImage","clientid","SCOPES","App","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","croppedImage","setCroppedImage","canvasRef","useRef","_useState5","_useState6","isAndroid","_useState7","_useState8","croquisTime","_useState9","_useState10","pointerTypeIndex","setPointerTypeIndex","_useState11","_useState12","_useState13","_useState14","_useState15","croquisTimeDB","eraseRadius","_useState16","drawSetting","setDrawSetting","_useState17","_useState18","_useState19","_useState20","setBrushColor","useEffect","timer","checkfolder","clearTimeout","gapi","load","client","init","clientId","scope","storedDrawSetting","localStorage","getItem","setItem","fetch","headers","Authorization","auth","getToken","access_token","Content-Type","then","response","json","data","files","id","createfolder","catch","error","method","body","mimeType","jsonResp","atobs","input","str","replace","output","buffer","bc","bs","charAt","String","fromCharCode","indexOf","createfile","imgs","names","metadata","parents","fd","FormData","append","Blob","type","dataURI","byteString","split","mimeString","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","dataURItoBlob","handleImageCrop","current","document","index","croppedCanvas","croppedCtx","croppedWidth","croppedHeight","now","year","month","day","hour","minute","second","timeZone","Intl","DateTimeFormat","resolvedOptions","timestamp","toLocaleString","locale","onUndoClick","onEraseClick","onShadowClick","onBrushClick","responseGoogle","Hotkeys","keyName","onKeyDown","handle","float","prevState","target","confirm","padding","parseInt","event","checked","defaultChecked","GoogleLogin","buttonText","onSuccess","onFailure","isSignedIn","GoogleLogout","onLogoutSuccess","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7eac1c68.chunk.js","sourcesContent":["/**\r\n * @type {ViewPoint}\r\n */\r\nconst NULL_VIEW_POINT = Object.freeze({\r\n  x: 0, y: 0, untransformedX: 0, untransformedY: 0\r\n});\r\n\r\n/**\r\n * @type {CanvasBounds}\r\n */\r\nconst NULL_BOUNDS = Object.freeze({\r\n  canvasWidth: 0, canvasHeight: 0,\r\n  left: 0, top: 0, right: 0, bottom: 0,\r\n  viewMin: NULL_VIEW_POINT, viewMax: NULL_VIEW_POINT,\r\n});\r\n\r\n/**\r\n * The identity matrix (a transform that results in view coordinates that are\r\n * identical to relative client coordinates).\r\n * @type {Matrix}\r\n */\r\nexport const IDENTITY = Object.freeze({ a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 });\r\n\r\nfunction valueOrDefault(value, defaultValue) {\r\n  if (value === null || (typeof value) === \"undefined\") {\r\n    return defaultValue;\r\n  } else {\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Facilitates calculation and manipulation of a zoom-and-pannable view within a\r\n * canvas.\r\n */\r\nexport default class CoordinateSystem {\r\n  /**\r\n   * @typedef Extents\r\n   * @property {number} min the minimal value in the range\r\n   * @property {number} max the maximal value in the range\r\n   */\r\n\r\n  /**\r\n   * @typedef Size\r\n   * @property {number} width the span of the element's horizontal axis\r\n   * @property {number} height the span of the element's vertical axis\r\n   */\r\n\r\n  /**\r\n   * @param {Object} parameters the initialization parameters for this instance.\r\n   * @param {Extents} parameters.scaleExtents the minimum and maximum allowable scale factor.\r\n   * @param {Sizee} parameters.documentSize the width and height of the document, in client space.\r\n   */\r\n  constructor({ scaleExtents, documentSize }) {\r\n    this._scaleExtents = scaleExtents;\r\n    this._documentSize = documentSize;\r\n  }\r\n\r\n  /**\r\n   * @type {Extents}\r\n   */\r\n  _scaleExtents;\r\n\r\n  /**\r\n   * @type {Size}\r\n   */\r\n  _documentSize;\r\n\r\n  /**\r\n   * @typedef Canvas\r\n   * @property {number} width the canvas's width\r\n   * @property {number} height the canvas's height\r\n   * @property {() => Object} getBoundingClientRect returns the client bounds\r\n   */\r\n\r\n  /**\r\n   * @type {Canvas}\r\n   * @private\r\n   */\r\n  _canvas = null;\r\n\r\n  /**\r\n   * @typedef View\r\n   * @property {number} scale the zoom factor\r\n   * @property {number} x the current x offset\r\n   * @property {number} y the current y offset\r\n   */\r\n\r\n  /**\r\n   * @type {View}\r\n   * @private\r\n   */\r\n  _view = { scale: 1.0, x: 0, y: 0 };\r\n\r\n  /**\r\n   * Describes a callback function that receives info about view changes\r\n   * @typedef {(update: { view: View, transform: Matrix }) => void} ViewListener\r\n   */\r\n\r\n   /**\r\n    * @type {ViewListener[]}\r\n    * @private\r\n    */\r\n   _viewChangeListeners = new Set();\r\n\r\n  /**\r\n   * @returns {Canvas} the canvas currently associated with this instance.\r\n   */\r\n  get canvas() {\r\n    return this._canvas;\r\n  }\r\n\r\n  /**\r\n   * Updates the canvas for this coordinate system and recalculates the view.\r\n   * @param {Canvas} canvas the new canvas to associate with this instance.\r\n   */\r\n  set canvas(canvas) {\r\n    this._canvas = canvas;\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * @returns {number} the current zoom factor\r\n   */\r\n  get scale() {\r\n    return this._view.scale;\r\n  }\r\n\r\n  /**\r\n   * Sets the zoom factor (clamped by the scale extents) and updates the view.\r\n   * @param {number} the new zoom factor\r\n   */\r\n  setScale = (scale) => {\r\n    this.setView({ scale });\r\n  };\r\n\r\n  /**\r\n   * @returns {number} the horizontal component of the current pan offset\r\n   */\r\n  get x() {\r\n    return this._view.x;\r\n  }\r\n\r\n  /**\r\n   * Sets the horizontal pan offset (clamped by the document extents) and\r\n   * updates the view.\r\n   * @param {number} x the new offset\r\n   */\r\n  set x(x) {\r\n    this.setView({ x });\r\n  }\r\n\r\n  /**\r\n   * @retruns {number} the vertical component of the current pan offset\r\n   */\r\n  get y() {\r\n    return this._view.y;\r\n  }\r\n\r\n  /**\r\n   * Sets the vertical pan offset (clamped by the document extents) and\r\n   * updates the view.\r\n   * @param {number} y the new offset\r\n   */\r\n  set y(y) {\r\n    this.setView({ y });\r\n  }\r\n\r\n  /**\r\n   * @returns {View} a copy of this instance's current view state.\r\n   */\r\n  get view() {\r\n    return { ...this._view };\r\n  }\r\n\r\n  /**\r\n   * @returns {Extents} a copy of the scale extents currently applied to this\r\n   * instance.\r\n   */\r\n  get scaleExtents() {\r\n    return { ...this._scaleExtents };\r\n  }\r\n\r\n  /**\r\n   * Updates the minimum and maximum scale and resets the view transform if it\r\n   * is outside the new extents.\r\n   * @param {Extents} extents the new scale extents.\r\n   */\r\n  set scaleExtents({ min, max }) {\r\n    this._scaleExtents = { min, max };\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * @returns {Size} the current document size (used to constrain the pan\r\n   * offset).\r\n   */\r\n  get documentSize() {\r\n    return { ...this._documentSize };\r\n  }\r\n\r\n  /**\r\n   * Sets the document size and recalculates the view if it is outside the new\r\n   * bounds.\r\n   * @param {Size} size the new document size.\r\n   */\r\n  set documentSize({ width, height }) {\r\n    this._documentSize = { width, height };\r\n    this.setView();\r\n  }\r\n\r\n  /**\r\n   * A view matrix expressing a series of transformations.\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\r\n   * @typedef Matrix\r\n   * @property {number} a horizontal scaling factor (1 == unscaled)\r\n   * @property {number} b vertical skewing factor (0 == unskewed)\r\n   * @property {number} c horizontal skewing factor (0 == unskewed)\r\n   * @property {number} d vertical scaling factor (1 == unscaled)\r\n   * @property {number} e horizontal translation (0 == untranslated)\r\n   * @property {number} f vertical translation (0 == untranslated)\r\n   */\r\n\r\n  /**\r\n   * @returns {Matrix} this coordinate system's current transformation matrix\r\n   */\r\n  get transformMatrix() {\r\n    //\r\n    return {\r\n      a: this._view.scale, // horizontal scaling\r\n      b: 0, // vertical skewing\r\n      c: 0, // horizontal skewing\r\n      d: this._view.scale, // vertical scaling\r\n      e: this._view.x,\r\n      f: this._view.y,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * An object expressing the bounds of a canvas object in terms of the\r\n   * coordinate system.\r\n   * @typedef CanvasBounds\r\n   * @property {number} left the left edge of the canvas in client space\r\n   * @property {number} right the right edge of the canvas in client space\r\n   * @property {number} top the top edge of the canvas in client space\r\n   * @property {number} bottom the bottom edge of the canvas in client space\r\n   * @property {number} canvasWidth the width of the canvas in client space\r\n   * @property {number} canvasHeight the height of the canvas in client space\r\n   * @property {ViewPoint} viewMin the top-left corner of the canvas in view space\r\n   * @property {ViewPoint} viewMax the bottom-right corner of the canvas in view space\r\n   */\r\n\r\n  /**\r\n   * @returns {CanvasBounds | undefined} the boundaries of the canvas linked to\r\n   * this coordinate system, or undefined if no canvas is set.\r\n   */\r\n  get canvasBounds() {\r\n    if (this._canvas) {\r\n      const { left, top, right, bottom } = this._canvas.getBoundingClientRect();\r\n      return {\r\n        viewMin: this.clientPointToViewPoint({ clientX: left, clientY: top }),\r\n        viewMax: this.clientPointToViewPoint({ clientX: right, clientY: bottom }),\r\n        left, top, right, bottom,\r\n        canvasWidth: this._canvas.width,\r\n        canvasHeight: this._canvas.height,\r\n      };\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {{left: number, top: number} | undefined}\r\n   */\r\n  get canvasRect() {\r\n    if (this.canvas) {\r\n      return this.canvas.getBoundingClientRect();\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates a variant of the given view clamped according to the scale and\r\n   * document bounds. Does not modify this instance.\r\n   * @param {View} view the view constraints to clamp.\r\n   * @returns {View} a new view object representing the constrained input.\r\n   */\r\n  clampView = ({ scale, x, y }) => {\r\n    const { min, max } = this.scaleExtents;\r\n    const { width, height } = this.documentSize;\r\n    const { left, top, right, bottom } = this.canvasRect || NULL_BOUNDS;\r\n\r\n    const canvasWidth = right - left;\r\n    const canvasHeight = bottom - top;\r\n\r\n    const maxx = canvasWidth / 2;\r\n    const minx = -(width * this._view.scale - canvasWidth / 2);\r\n    const maxy = canvasHeight / 2;\r\n    const miny = -(height * this._view.scale - canvasHeight / 2);\r\n\r\n    // Clamp values to acceptible range.\r\n    return {\r\n      scale: Math.min(Math.max(scale, min), max),\r\n      x: Math.min(Math.max(x, minx), maxx),\r\n      y: Math.min(Math.max(y, miny), maxy),\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Resets the view transform to its default state.\r\n   */\r\n  resetView = () => {\r\n    this.setView({ scale: 1.0, x: 0, y: 0 });\r\n  };\r\n\r\n  /**\r\n   * Updates the view, ensuring that it is within the document and scale bounds.\r\n   * @param {View} view\r\n   *    the new view state. Any view property not specified will remain\r\n   *    unchanged.\r\n   * @return {View}\r\n   *    a copy of the view state after having been constrained and applied.\r\n   */\r\n  setView = (view) => {\r\n    const newView = this.clampView({ ...this._view, ...(view || {}) });\r\n    const { scale, x, y } = this._view;\r\n\r\n    // Only trigger if the view actually changed.\r\n    if (newView.scale !== scale || newView.x !== x || newView.y !== y) {\r\n      this._view = newView;\r\n      this._viewChangeListeners.forEach(listener => listener && listener(newView));\r\n    }\r\n\r\n    return { ...this._view };\r\n  };\r\n\r\n  /**\r\n   * Updates the current view scale while attempting to keep the given point\r\n   * fixed within the canvas.\r\n   *\r\n   * @param {number} deltaScale the amount by which to change the current scale factor.\r\n   * @param {ClientPoint} clientPoint the origin of the zoom, in client space.\r\n   *\r\n   * @returns {View} the newly computed view.\r\n   */\r\n  scaleAtClientPoint = (deltaScale, clientPoint) => {\r\n    const viewPt = this.clientPointToViewPoint(clientPoint);\r\n    const newView = this.clampView({ ...this._view, scale: this._view.scale + deltaScale });\r\n    const clientPtPostScale = this.viewPointToClientPoint(viewPt, newView);\r\n\r\n    newView.x = this._view.x - (clientPtPostScale.clientX - clientPoint.clientX);\r\n    newView.y = this._view.y - (clientPtPostScale.clientY - clientPoint.clientY);\r\n\r\n    return this.setView(newView);\r\n  };\r\n\r\n  /**\r\n   * Describes a point in view space (client space after the viewport transform\r\n   * has been applied).\r\n   * @typedef ViewPoint\r\n   * @property {number} x\r\n   *    the x-coordinate in view space\r\n   * @property {number} y\r\n   *    the y-coordinate in view space\r\n   * @property {number} relativeClientX\r\n   *    the x-coordinate of the point in client space, relative to the top-left\r\n   *    corner of the canvas\r\n   * @property {number} relativeClientY\r\n   *    the y-coordinate of the point in client space, relative to the top-left\r\n   *    corner of the canvas\r\n   */\r\n\r\n  /**\r\n   * @param {ClientPoint} point the point to transform in client space\r\n   * @param {View} view the view transform to apply (defaults to the current view)\r\n   * @returns {ViewPoint} the result of converting the given client coordinate\r\n   * to view space. If there is no canvas set, a top-left corner of (0, 0) is\r\n   * assumed.\r\n   */\r\n  clientPointToViewPoint = ({ clientX, clientY }, view = this._view) => {\r\n    const { left, top } = this.canvasRect || NULL_BOUNDS;\r\n    const relativeClientX = clientX - left;\r\n    const relativeClientY = clientY - top;\r\n\r\n    return {\r\n      x: (relativeClientX - view.x) / view.scale,\r\n      y: (relativeClientY - view.y) / view.scale,\r\n      relativeClientX,\r\n      relativeClientY,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @typedef ClientPoint\r\n   * @property {number} clientX\r\n   *    the x-coordinate in client space\r\n   * @property {number} clientY\r\n   *    the y-coordinate in client space\r\n   * @property {number} x\r\n   *    an alias for clientX\r\n   * @property {number} y\r\n   *    an alias for clientY\r\n   * @property {number} relativeX\r\n   *    the x-coordinate in client space, relative to the top-left corner of the\r\n   *    canvas\r\n   * @property {number} relativeY\r\n   *    the y-coordinate in client space, relative to the top-left corner of the\r\n   *    canvas\r\n   */\r\n\r\n   /**\r\n    * @param {ViewPoint} point the point to transform in view space\r\n    * @param {number} point.x the point's x-coordinate\r\n    * @param {number} point.y the point's y-coordinate\r\n    * @param {View} view the view transform to apply (defaults to the current view)\r\n    * @returns {ClientPoint} the result of converting the given coordinate to\r\n    * client space. If there is no canvas set, a top-left corner of (0, 0) is\r\n    * assumed.\r\n    */\r\n  viewPointToClientPoint = ({ x, y }, view = this._view) => {\r\n    const { left, top } = this.canvasRect || NULL_BOUNDS;\r\n    const relativeX = x * view.scale + view.x;\r\n    const relativeY = y * view.scale + view.y;\r\n    const clientX = relativeX + left;\r\n    const clientY = relativeY + top;\r\n\r\n    return { clientX, clientY, relativeX, relativeY, x: clientX, y: clientY };\r\n  };\r\n\r\n  /**\r\n   * Adds a new callback function that will be invoked each time the view\r\n   * transform changes.\r\n   * @param {ViewListener} listener the callback to execute.\r\n   */\r\n  attachViewChangeListener = (listener) => {\r\n    this._viewChangeListeners.add(listener);\r\n  };\r\n}\r\n","const TOUCH_SLOP = 10;\r\nconst PINCH_TIMEOUT_MS = 250;\r\nconst SUPPRESS_SCROLL = (e) => {\r\n  // No zooming while drawing, but we'll cancel the scroll event.\r\n  e.preventDefault();\r\n  return this;\r\n};\r\n\r\n/**\r\n * The default state for the interaction state machine. Supports zoom and\r\n * initiating pan and drawing actions.\r\n */\r\nexport class DefaultState {\r\n  // constructor(controlPan) {\r\n  //  this.PanOn = controlPan;\r\n  // }\r\n  handleMouseWheel = (e, canvasDraw) => {\r\n    const { disabled, enablePanAndZoom, mouseZoomFactor } = canvasDraw.props;\r\n    if (disabled ) {\r\n      return new DisabledState();\r\n    } \r\n    // 컨트롤+휠 비활성화\r\n    // else if (enablePanAndZoom && e.ctrlKey) {\r\n    //   e.preventDefault();\r\n    //   canvasDraw.coordSystem.scaleAtClientPoint(mouseZoomFactor * e.deltaY, clientPointFromEvent(e));\r\n    // }\r\n    return this;\r\n  };\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    console.log(canvasDraw.controlPan);\r\n    if (canvasDraw.props.disabled) {\r\n      return new DisabledState();\r\n    } \r\n    // 컨트롤 비활성화\r\n    //else if ((canvasDraw.controlPan|| e.ctrlKey) && canvasDraw.props.enablePanAndZoom) {\r\n    else if (canvasDraw.controlPan && canvasDraw.props.enablePanAndZoom) {\r\n      \r\n      return (new PanState()).handleDrawStart(e, canvasDraw);\r\n    } else {\r\n      return (new WaitForPinchState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return new DisabledState();\r\n    } else {\r\n      const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n      canvasDraw.lazy.update({ x, y });\r\n      return this;\r\n    }\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    return canvasDraw.props.disabled ? (new DisabledState()) : this;\r\n  };\r\n};\r\n\r\n/**\r\n * This state is used as long as the disabled prop is active. It ignores all\r\n * events and doesn't prevent default actions. The disabled state can only be\r\n * triggered from the default state (i.e., while no action is actively being\r\n * performed).\r\n */\r\nexport class DisabledState {\r\n  handleMouseWheel = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleMouseWheel(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawMove(e, canvasDraw);\r\n    }\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    if (canvasDraw.props.disabled) {\r\n      return this;\r\n    } else {\r\n      return (new DefaultState()).handleDrawEnd(e, canvasDraw);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This state is active as long as the user is panning the image. This state is\r\n * retained until the pan ceases.\r\n */\r\nexport class PanState {\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    this.dragStart = clientPointFromEvent(e);\r\n    this.panStart = { x: canvasDraw.coordSystem.x, y: canvasDraw.coordSystem.y };\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    const { clientX, clientY } = clientPointFromEvent(e);\r\n    const dx = clientX - this.dragStart.clientX;\r\n    const dy = clientY - this.dragStart.clientY;\r\n    canvasDraw.coordSystem.setView({ x: this.panStart.x + dx, y: this.panStart.y + dy });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * This state is active when the user has initiated the drawing action but has\r\n * not yet created any lines. We use this state to try and detect a second touch\r\n * event to initiate a pinch-zoom action. We'll give up on that if enough time\r\n * or movement happens without a second touch.\r\n */\r\nexport class WaitForPinchState {\r\n  constructor() {\r\n    this.startClientPoint = null;\r\n    this.startTimestamp = (new Date()).valueOf();\r\n    this.deferredPoints = [];\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart  = (e, canvasDraw) => {\r\n    const { enablePanAndZoom } = canvasDraw.props;\r\n    e.preventDefault();\r\n\r\n    // We're going to transition immediately into lazy-drawing mode if\r\n    // pan-and-zoom isn't enabled or if this event wasn't triggered by a touch.\r\n    if (!e.touches || !e.touches.length || !enablePanAndZoom) {\r\n      return (new DrawingState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    // If we already have two touch events, we can move straight into pinch/pan\r\n    if (enablePanAndZoom && e.touches && e.touches.length >= 2) {\r\n      return (new ScaleOrPanState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    return this.handleDrawMove(e, canvasDraw);\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    // If we have two touches, move to pinch/pan (we don't have to recheck\r\n    // whether zoom is enabled because that happend in draw start).\r\n    if (e.touches && e.touches.length >= 2) {\r\n      // Use the start draw to handler to transition.\r\n      return (new ScaleOrPanState()).handleDrawStart(e, canvasDraw);\r\n    }\r\n\r\n    const clientPt = clientPointFromEvent(e);\r\n    this.deferredPoints.push(clientPt);\r\n\r\n    // If we've already moved far enough, or if enough time has passed, give up\r\n    // and switch over to drawing.\r\n    if ((new Date()).valueOf() - this.startTimestamp < PINCH_TIMEOUT_MS) {\r\n      if (this.startClientPoint === null) {\r\n        this.startClientPoint = clientPt;\r\n      }\r\n\r\n      // Note that we're using \"manhattan distance\" rather than computing a\r\n      // hypotenuse here as a cheap approximation\r\n      const d =\r\n        Math.abs(clientPt.clientX - this.startClientPoint.clientX)\r\n        + Math.abs(clientPt.clientY - this.startClientPoint.clientY);\r\n\r\n      if (d < TOUCH_SLOP) {\r\n        // We're not ready to give up yet.\r\n        return this;\r\n      }\r\n    }\r\n\r\n    // Okay, give up and start drawing.\r\n    return this.issueDeferredPoints(canvasDraw);\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    // The user stopped drawing before we decided what to do. Just treat this as\r\n    // if they were drawing all along.\r\n    return this.issueDeferredPoints(canvasDraw).handleDrawEnd(e, canvasDraw);\r\n  };\r\n\r\n  issueDeferredPoints = (canvasDraw) => {\r\n    // Time to give up. Play our deferred points out to the drawing state.\r\n    // The first point will have been a start draw.\r\n    let nextState = new DrawingState();\r\n    for (let i = 0; i < this.deferredPoints.length; i++) {\r\n      const deferredPt = this.deferredPoints[i];\r\n      const syntheticEvt = new SyntheticEvent(deferredPt);\r\n      const func = i === 0 ? nextState.handleDrawStart : nextState.handleDrawMove;\r\n      nextState = func(syntheticEvt, canvasDraw);\r\n    }\r\n    return nextState;\r\n  };\r\n}\r\n\r\n/**\r\n * This state is active when the user has added at least two touch points but we\r\n * don't yet know if they intend to pan or zoom.\r\n */\r\nexport class ScaleOrPanState {\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n    this.start = this.getTouchMetrics(e);\r\n    this.panStart = { x: canvasDraw.coordSystem.x, y: canvasDraw.coordSystem.y };\r\n    this.scaleStart = canvasDraw.coordSystem.scale;\r\n    return this;\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const { centroid, distance } = this.recentMetrics = this.getTouchMetrics(e);\r\n\r\n    // Switch to scaling?\r\n    const dd = Math.abs(distance - this.start.distance);\r\n    if (dd >= TOUCH_SLOP) {\r\n      return new TouchScaleState(this).handleDrawMove(e, canvasDraw);\r\n    }\r\n\r\n    // Switch to panning?\r\n    const dx = centroid.clientX - this.start.centroid.clientX;\r\n    const dy = centroid.clientY - this.start.centroid.clientY;\r\n    const dc = Math.abs(dx) + Math.abs(dy);\r\n    if (dc >= TOUCH_SLOP) {\r\n      return new TouchPanState(this).handleDrawMove(e, canvasDraw);\r\n    }\r\n\r\n    // Not enough movement yet\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n\r\n  getTouchMetrics = (e) => {\r\n    const { clientX: t1x, clientY: t1y } = clientPointFromEvent(e.touches[0]);\r\n    const { clientX: t2x, clientY: t2y } = clientPointFromEvent(e.touches[1]);\r\n\r\n    const dx = t2x - t1x;\r\n    const dy = t2y - t1y;\r\n\r\n    return {\r\n      t1: { clientX: t1x, clientY: t1y },\r\n      t2: { clientX: t2x, clientY: t2y },\r\n      distance: Math.sqrt(dx * dx + dy * dy),\r\n      centroid: { clientX: (t1x + t2x) / 2.0, clientY: (t1y + t2y) / 2.0 },\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * The user is actively using touch gestures to pan the image.\r\n */\r\nexport class TouchPanState {\r\n  constructor(scaleOrPanState) {\r\n    this.scaleOrPanState = scaleOrPanState;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n  handleDrawStart = () => this;\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const ref = this.scaleOrPanState;\r\n    const { centroid, distance } = ref.recentMetrics = ref.getTouchMetrics(e);\r\n\r\n    const dx = centroid.clientX - ref.start.centroid.clientX;\r\n    const dy = centroid.clientY - ref.start.centroid.clientY;\r\n\r\n    canvasDraw.setView({ x: ref.panStart.x + dx, y: ref.panStart.y + dy });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * The user is actively using touch gestures to scale the drawing.\r\n */\r\nexport class TouchScaleState {\r\n  constructor(scaleOrPanState) {\r\n    this.scaleOrPanState = scaleOrPanState;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n  handleDrawStart = () => this;\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n    if (!e.touches || e.touches.length < 2) {\r\n      return new DefaultState();\r\n    }\r\n\r\n    const ref = this.scaleOrPanState;\r\n    const { centroid, distance } = ref.recentMetrics = ref.getTouchMetrics(e);\r\n\r\n    const targetScale = ref.scaleStart * (distance / ref.start.distance);\r\n    const dScale = targetScale - canvasDraw.coordSystem.scale;\r\n    canvasDraw.coordSystem.scaleAtClientPoint(dScale, centroid);\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = () => new DefaultState();\r\n}\r\n\r\n/**\r\n * This state is active when the user is drawing.\r\n */\r\nexport class DrawingState {\r\n  constructor() {\r\n    this.isDrawing = false;\r\n  }\r\n\r\n  handleMouseWheel = SUPPRESS_SCROLL.bind(this);\r\n\r\n  handleDrawStart = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    if (e.touches && e.touches.length) {\r\n      // on touch, set catenary position to touch pos\r\n      const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n      canvasDraw.lazy.update({ x, y }, { both: true });\r\n    }\r\n\r\n    return this.handleDrawMove(e, canvasDraw);\r\n  };\r\n\r\n  handleDrawMove = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    const { x, y } = viewPointFromEvent(canvasDraw.coordSystem, e);\r\n    canvasDraw.lazy.update({ x, y });\r\n    const isDisabled = !canvasDraw.lazy.isEnabled();\r\n\r\n    if (!this.isDrawing || isDisabled) {\r\n      // Start drawing and add point\r\n      canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\r\n      this.isDrawing = true;\r\n    }\r\n\r\n    // Add new point\r\n    canvasDraw.points.push(canvasDraw.clampPointToDocument(canvasDraw.lazy.brush.toObject()));\r\n\r\n    // Draw current points\r\n    canvasDraw.drawPoints({\r\n      points: canvasDraw.points,\r\n      brushColor: canvasDraw.props.brushColor,\r\n      brushRadius: canvasDraw.props.brushRadius\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  handleDrawEnd = (e, canvasDraw) => {\r\n    e.preventDefault();\r\n\r\n    // Draw to this end pos\r\n    this.handleDrawMove(e, canvasDraw);\r\n    canvasDraw.saveLine();\r\n\r\n    return new DefaultState();\r\n  };\r\n}\r\n\r\nexport class SyntheticEvent {\r\n  constructor({ clientX, clientY }) {\r\n    this.clientX = clientX;\r\n    this.clientY = clientY;\r\n    this.touches = [ { clientX, clientY } ];\r\n  }\r\n\r\n  preventDefault = () => {};\r\n}\r\n\r\nexport function clientPointFromEvent(e) {\r\n  // use cursor pos as default\r\n  let clientX = e.clientX;\r\n  let clientY = e.clientY;\r\n\r\n  // use first touch if available\r\n  if (e.changedTouches && e.changedTouches.length > 0) {\r\n    clientX = e.changedTouches[0].clientX;\r\n    clientY = e.changedTouches[0].clientY;\r\n  }\r\n\r\n  return { clientX, clientY };\r\n}\r\n\r\nexport function viewPointFromEvent(coordSystem, e) {\r\n  return coordSystem.clientPointToViewPoint(clientPointFromEvent(e));\r\n}\r\n","// Determines if the browser supprots passive events\r\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\nlet passiveSupported = false;\r\ntry {\r\n  const options = {\r\n    get passive() {\r\n      passiveSupported = true;\r\n      return false; \r\n    }\r\n  };\r\n  window.addEventListener(\"test\", options, options);\r\n  window.removeEventListener(\"test\", options, options);\r\n} catch(e) {\r\n  passiveSupported = false;\r\n}\r\n\r\nexport default function makePassiveEventOption(passive) {\r\n  return passiveSupported ? { passive } : passive;\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LazyBrush } from \"lazy-brush\";\r\nimport { Catenary } from \"catenary-curve\";\r\n\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\nimport CoordinateSystem, { IDENTITY } from \"./coordinateSystem\";\r\nimport drawImage from \"./drawImage\";\r\nimport { DefaultState } from \"./interactionStateMachine\";\r\nimport makePassiveEventOption from \"./makePassiveEventOption\";\r\n////휠리스너 끔 handleWheel검색하면 언마운트도있음\r\n\r\n// // this.saveLine({ brushColor, brushRadius });\r\n        //버그인지  오류 실수인지 saveLine이 2개있었음 참고\r\nfunction midPointBtw(p1, p2) {\r\n  return {\r\n    x: p1.x + (p2.x - p1.x) / 2,\r\n    y: p1.y + (p2.y - p1.y) / 2,\r\n  };\r\n}\r\n\r\nconst canvasStyle = {\r\n  display: \"block\",\r\n  position: \"absolute\",\r\n};\r\nconst canvasStyle2 = {\r\n  opacity: \"70%\",\r\n  position: \"absolute\",\r\n};\r\n// The order of these is important: grid > drawing > temp > interface\r\nconst canvasTypes = [\"grid\",\"drawing\",  \"temp\", \"interface\"];\r\n\r\nlet eraseOn = false\r\nlet shadowOn = false\r\nlet penstate = \"brush\"\r\nconst dimensionsPropTypes = PropTypes.oneOfType([\r\n  PropTypes.number,\r\n  PropTypes.string,\r\n]);\r\n\r\nconst boundsProp = PropTypes.shape({\r\n  min: PropTypes.number.isRequired,\r\n  max: PropTypes.number.isRequired,\r\n});\r\n\r\nexport default class CanvasDraw extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func,\r\n    loadTimeOffset: PropTypes.number,\r\n    lazyRadius: PropTypes.number,\r\n    allowOnlyPointerType :PropTypes.string,\r\n    brushRadius: PropTypes.number,\r\n    brushColor: PropTypes.string,\r\n    catenaryColor: PropTypes.string,\r\n    gridColor: PropTypes.string,\r\n    backgroundColor: PropTypes.string,\r\n    hideGrid: PropTypes.bool,\r\n    canvasWidth: dimensionsPropTypes,\r\n    canvasHeight: dimensionsPropTypes,\r\n    disabled: PropTypes.bool,\r\n    imgSrc: PropTypes.string,\r\n    saveData: PropTypes.string,\r\n    immediateLoading: PropTypes.bool,\r\n    hideInterface: PropTypes.bool,\r\n    gridSizeX: PropTypes.number,\r\n    gridSizeY: PropTypes.number,\r\n    gridLineWidth: PropTypes.number,\r\n    hideGridX: PropTypes.bool,\r\n    hideGridY: PropTypes.bool,\r\n    enablePanAndZoom: PropTypes.bool,\r\n    PanControl: PropTypes.bool,\r\n    mouseZoomFactor: PropTypes.number,\r\n    zoomExtents: boundsProp,\r\n    clampLinesToDocument: PropTypes.bool,\r\n    refreshBackgroundImage: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onChange: null,\r\n    loadTimeOffset: 5,\r\n    lazyRadius: 12,\r\n    allowOnlyPointerType : \"pen\",\r\n    brushRadius: 10,\r\n    brushColor: \"#444\",\r\n    catenaryColor: \"#0a0302\",\r\n    gridColor: \"rgba(150,150,150,0.17)\",\r\n    backgroundColor: \"#FFF\",\r\n    hideGrid: false,\r\n    canvasWidth: 400,\r\n    canvasHeight: 400,\r\n    disabled: false,\r\n    imgSrc: \"\",\r\n    saveData: \"\",\r\n    immediateLoading: false,\r\n    hideInterface: false,\r\n    gridSizeX: 25,\r\n    gridSizeY: 25,\r\n    gridLineWidth: 0.5,\r\n    hideGridX: false,\r\n    hideGridY: false,\r\n    enablePanAndZoom: true,\r\n    PanControl:false,\r\n    mouseZoomFactor: 0.01,\r\n    zoomExtents: { min: 0.33, max: 3 },\r\n    clampLinesToDocument: false,\r\n    refreshBackgroundImage: false,\r\n  };\r\n\r\n  ///// public APIctx /////////////////////////////////////////////////////////////\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.controlPan=false;\r\n    //this.zoomscale=1;\r\n    this.state = {\r\n      controlPan2: false,\r\n      zoomscale:0\r\n    };\r\n    this.canvas = {};\r\n    this.ctx = {};\r\n\r\n    this.catenary = new Catenary();\r\n\r\n    this.points = [];\r\n    this.lines = [];\r\n    this.erasedLines = [];\r\n\r\n    this.mouseHasMoved = true;\r\n    this.valuesChanged = true;\r\n    this.isDrawing = false;\r\n    this.isPressing = false;\r\n    this.deferRedrawOnViewChange = false;\r\n\r\n    this.interactionSM = new DefaultState();\r\n    this.coordSystem = new CoordinateSystem({\r\n      scaleExtents: props.zoomExtents,\r\n      documentSize: { width: props.canvasWidth, height: props.canvasHeight },\r\n    });\r\n    this.coordSystem.attachViewChangeListener(this.applyView.bind(this));\r\n  }\r\n\r\n  undo = () => {\r\n    let lines = [];\r\n    if (this.lines.length) {\r\n      lines = this.lines.slice(0, -1);\r\n    } else if (this.erasedLines.length) {\r\n      lines = this.erasedLines.pop();\r\n    }\r\n    this.clearExceptErasedLines();\r\n    this.simulateDrawingLines({ lines, immediate: true });\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  eraseAll = () => {\r\n    this.erasedLines.push([...this.lines]);\r\n    this.clearExceptErasedLines();\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  clear = () => {\r\n    this.erasedLines = [];\r\n    this.clearExceptErasedLines();\r\n    this.resetView();\r\n  };\r\n\r\n  resetView = () => {\r\n    return this.coordSystem.resetView();\r\n  };\r\n\r\n  setView = (view) => {\r\n    return this.coordSystem.setView(view);\r\n  };\r\n\r\n  getSaveData = () => {\r\n    // Construct and return the stringified saveData object\r\n    return JSON.stringify({\r\n      lines: this.lines,\r\n      width: this.props.canvasWidth,\r\n      height: this.props.canvasHeight,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Combination of work by Ernie Arrowsmith and emizz\r\n   * References:\r\n   * https://stackoverflow.com/questions/32160098/change-html-canvas-black-background-to-white-background-when-creating-jpg-image\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\r\n\r\n   * This function will export the canvas to a data URL, which can subsequently be used to share or manipulate the image file.\r\n   * @param {string} fileType Specifies the file format to export to. Note: should only be the file type, not the \"image/\" prefix.\r\n   *  For supported types see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\r\n   * @param {bool} useBgImage Specifies whether the canvas' current background image should also be exported. Default is false.\r\n   * @param {string} backgroundColour The desired background colour hex code, e.g. \"#ffffff\" for white.\r\n   */\r\n  getDataURL = (fileType, useBgImage, backgroundColour) => {\r\n    // Get a reference to the \"drawing\" layer of the canvas\r\n    let canvasToExport = this.canvas.drawing;\r\n\r\n    let context = canvasToExport.getContext(\"2d\");\r\n\r\n    //cache height and width\r\n    let width = canvasToExport.width;\r\n    let height = canvasToExport.height;\r\n\r\n    //get the current ImageData for the canvas\r\n    let storedImageData = context.getImageData(0, 0, width, height);\r\n\r\n    //store the current globalCompositeOperation\r\n    var compositeOperation = context.globalCompositeOperation;\r\n\r\n    //set to draw behind current content\r\n    context.globalCompositeOperation = \"destination-over\";\r\n\r\n    // If \"useBgImage\" has been set to true, this takes precedence over the background colour parameter\r\n    if (useBgImage) {\r\n      if (!this.props.imgSrc) return \"Background image source not set\";\r\n\r\n      // Write the background image\r\n      this.drawImage();\r\n    } else if (backgroundColour != null) {\r\n      //set background color\r\n      context.fillStyle = backgroundColour;\r\n\r\n      //fill entire canvas with background colour\r\n      context.fillRect(0, 0, width, height);\r\n    }\r\n\r\n    // If the file type has not been specified, default to PNG\r\n    if (!fileType) fileType = \"png\";\r\n\r\n    // Export the canvas to data URL\r\n    let imageData = canvasToExport.toDataURL(`image/${fileType}`);\r\n\r\n    //clear the canvas\r\n    context.clearRect(0, 0, width, height);\r\n\r\n    //restore it with original / cached ImageData\r\n    context.putImageData(storedImageData, 0, 0);\r\n\r\n    //reset the globalCompositeOperation to what it was\r\n    context.globalCompositeOperation = compositeOperation;\r\n\r\n    return imageData;\r\n  };\r\n\r\n  loadSaveData = (saveData, immediate = this.props.immediateLoading) => {\r\n    if (typeof saveData !== \"string\") {\r\n      throw new Error(\"saveData needs to be of type string!\");\r\n    }\r\n\r\n    const { lines, width, height } = JSON.parse(saveData);\r\n\r\n    if (!lines || typeof lines.push !== \"function\") {\r\n      throw new Error(\"saveData.lines needs to be an array!\");\r\n    }\r\n\r\n    this.clear();\r\n\r\n\r\n    \r\n    if (\r\n      width === this.props.canvasWidth &&\r\n      height === this.props.canvasHeight\r\n    ) {\r\n      this.simulateDrawingLines({\r\n        lines,\r\n        immediate,\r\n      });\r\n    } else {\r\n      // we need to rescale the lines based on saved & current dimensions\r\n      const scaleX = this.props.canvasWidth / width;\r\n      const scaleY = this.props.canvasHeight / height;\r\n      const scaleAvg = (scaleX + scaleY) / 2;\r\n\r\n      this.simulateDrawingLines({\r\n        lines: lines.map((line) => ({\r\n          ...line,\r\n          points: line.points.map((p) => ({\r\n            x: p.x * scaleX,\r\n            y: p.y * scaleY,\r\n          })),\r\n          brushRadius: line.brushRadius * scaleAvg,\r\n        })),\r\n        immediate,\r\n      });\r\n    }\r\n  };\r\n\r\n  ///// private API ////////////////////////////////////////////////////////////\r\n\r\n  ///// React Lifecycle\r\n\r\n  componentDidMount() {\r\n\r\n    \r\n\r\n    this.lazy = new LazyBrush({\r\n      radius: this.props.lazyRadius * window.devicePixelRatio,\r\n      enabled: true,\r\n      initialPoint: {\r\n        x: window.innerWidth / 2,\r\n        y: window.innerHeight / 2,\r\n      },\r\n    });\r\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n\r\n    this.canvasObserver = new ResizeObserver((entries, observer) =>\r\n      this.handleCanvasResize(entries, observer)\r\n    );\r\n    this.canvasObserver.observe(this.canvasContainer);\r\n\r\n    this.drawImage();\r\n    this.loop();\r\n\r\n    window.setTimeout(() => {\r\n      const initX = window.innerWidth / 2;\r\n      const initY = window.innerHeight / 2;\r\n      this.lazy.update(\r\n        { x: initX - this.chainLength / 4, y: initY },\r\n        { both: true }\r\n      );\r\n      this.lazy.update(\r\n        { x: initX + this.chainLength / 4, y: initY },\r\n        { both: false }\r\n      );\r\n      this.mouseHasMoved = true;\r\n      this.valuesChanged = true;\r\n      this.clearExceptErasedLines();\r\n\r\n      // Load saveData from prop if it exists\r\n      if (this.props.saveData) {\r\n        this.loadSaveData(this.props.saveData);\r\n      }\r\n    }, 100);\r\n\r\n    // Attach our wheel event listener here instead of in the render so that we can specify a non-passive listener.\r\n    // This is necessary to prevent the default event action on chrome.\r\n    // https://github.com/facebook/react/issues/14856\r\n    \r\n    //휠리스너 끔 handleWheel검색하면 언마운트도있음\r\n    // this.canvas.interface &&\r\n    //   this.canvas.interface.addEventListener(\r\n    //     \"wheel\",\r\n    //     this.handleWheel,\r\n    //     makePassiveEventOption()\r\n    //   );\r\n\r\n\r\n    //키 이벤트리스너\r\n      // document.addEventListener(\r\n      //   \"keydown\",\r\n      //   this.CustomKeyDown,\r\n      //  false\r\n      // );\r\n       \r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\r\n      // Set new lazyRadius values\r\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\r\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\r\n    }\r\n\r\n    if (prevProps.saveData !== this.props.saveData) {\r\n      this.loadSaveData(this.props.saveData);\r\n    }\r\n\r\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\r\n      // Signal this.loop function that values changed\r\n      this.valuesChanged = true;\r\n    }\r\n    // Refresh the Background Canvas if refreshBackgroundImage is true\r\n    // if (this.props.refreshBackgroundImage) {\r\n      if (prevProps.imgSrc !== this.props.imgSrc){\r\n      this.drawImage();\r\n      // this.drawImage({ ctx: this.ctx.grid, img: this.image });\r\n      \r\n  }\r\n\r\n    this.coordSystem.scaleExtents = this.props.zoomExtents;\r\n    if (!this.props.enablePanAndZoom) {\r\n      this.coordSystem.resetView();\r\n    }\r\n\r\n    if (prevProps.imgSrc !== this.props.imgSrc) {\r\n      // this.drawImage();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.canvasObserver.unobserve(this.canvasContainer);\r\n    // this.canvas.interface &&\r\n    //   this.canvas.interface.removeEventListener(\"wheel\", this.handleWheel);\r\n    //휠리스너 끔 handleWheel검색하면 언마운트도있음\r\n  };\r\n\r\n  render() {\r\n    return (<>\r\n      <div\r\n        className={this.props.className}\r\n        \r\n        style={{\r\n          display: \"block\",\r\n          background: this.props.backgroundColor,\r\n          touchAction: \"none\",\r\n          width: this.props.canvasWidth,\r\n          height: this.props.canvasHeight,\r\n          ...this.props.style,\r\n        }}\r\n        ref={(container) => {\r\n          if (container) {\r\n            this.canvasContainer = container;\r\n          }\r\n        }}\r\n      >\r\n        {canvasTypes.map((name) => {\r\n          const isInterface = name === \"interface\";\r\n          let styles =  canvasStyle;\r\n            if (name === \"temp\") {\r\n    styles = {\r\n      ...styles,\r\n      width:this.props.canvasWidth,\r\n      opacity: this.props.brushColor ===\"erase\"? \"70%\":\"100%\",\r\n      zIndex: this.props.brushColor === \"shadow\" ? 0 : 1,\r\n    }}else{\r\nstyles = {\r\n      ...styles,\r\n      zIndex: 1,\r\n    \r\n    };\r\n  }\r\n          return (\r\n            <canvas\r\n              key={name}\r\n              ref={(canvas) => {\r\n                if (canvas) {\r\n                  this.canvas[name] = canvas;\r\n                  this.ctx[name] = canvas.getContext(\"2d\");\r\n                  if (isInterface) {\r\n                    this.coordSystem.canvas = canvas;\r\n                  }\r\n                }\r\n              }}\r\n              style={{ ...styles, }}\r\n              \r\n              // onMouseDown={isInterface ? this.handleDrawStart : undefined}\r\n              // onMouseMove={isInterface ? this.handleDrawMove : undefined}\r\n              // onMouseUp={isInterface ? this.handleDrawEnd : undefined}\r\n              // onMouseOut={isInterface ? this.handleDrawEnd : undefined}\r\n              onPointerDown={isInterface ? this.handleDrawStart : undefined}\r\n              onPointerMove={isInterface ? this.handleDrawMove : undefined}\r\n              onPointerUp={isInterface ? this.handleDrawEnd : undefined}\r\n              onPointerOut={isInterface ? this.handleDrawEnd : undefined}\r\n              // onTouchStart={isInterface ? this.handleDrawStart : undefined}\r\n              // onTouchMove={isInterface ? this.handleDrawMove : undefined}\r\n              // onTouchEnd={isInterface ? this.handleDrawEnd : undefined}\r\n              // onTouchCancel={isInterface ? this.handleDrawEnd : undefined}\r\n              \r\n              \r\n              \r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div><button onClick={() => {\r\n  this.controlPan = !this.controlPan;\r\n  console.log(this.controlPan);\r\n  this.setState({ controlPan2: !this.state.controlPan2 });\r\n}}>{this.state.controlPan2 ? \"Pan on\" : \"Pan off\"}</button>\r\n<button onClick={()=>{this.resetView()}}>reset</button>\r\n\r\n\r\n<button onClick={()=>{this.setState({ zoomscale: this.state.zoomscale-0.1 });this.coordSystem.scaleAtClientPoint(0.1,{ clientX: 600, clientY: 300 })}}>zoom+</button>\r\n\r\n<button onClick={()=>{this.setState({ zoomscale: this.state.zoomscale+0.1 });this.coordSystem.scaleAtClientPoint(-0.1,{ clientX: 600, clientY: 300 })}}>zoom-</button>\r\n\r\n\r\n\r\n</div>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  ///// Event Handlers\r\n  CustomKeyDown = (e) =>{\r\n    console.log(\"키\",e.key)\r\n    if (e.key === \"z\") {\r\n      //undo\r\n      console.log(\"undo\")\r\n      this.undo()\r\n    }\r\n    if (e.key === \"c\") {\r\n      //erase\r\n      console.log(\"erase\")\r\n      if (penstate != \"erase\") { penstate = \"erase\" }\r\n      else{penstate = \"brush\" }\r\n        \r\n    }\r\n    if (e.key === \"x\") {\r\n      //shadow\r\n      if (penstate != \"shadow\") { penstate = \"shadow\" }\r\n      else{penstate = \"brush\" }\r\n    }\r\n  }\r\n  handleWheel = (e) => {\r\n    this.interactionSM = this.interactionSM.handleMouseWheel(e, this);\r\n  };\r\n\r\n  handleDrawStart = (e) => {\r\n    if (this.props.allowOnlyPointerType == 'all' ||\r\n    e.pointerType == this.props.allowOnlyPointerType\r\n       ){\r\n         \r\n         \r\n      this.interactionSM = this.interactionSM.handleDrawStart(e, this);\r\n    this.mouseHasMoved = true;\r\n    }\r\n   \r\n  };\r\n\r\n  handleDrawMove = (e) => {\r\n    if (this.props.allowOnlyPointerType == 'all' ||\r\n    e.pointerType == this.props.allowOnlyPointerType ){\r\n    this.interactionSM = this.interactionSM.handleDrawMove(e, this);\r\n    this.mouseHasMoved = true;\r\n    }\r\n  };\r\n\r\n  handleDrawEnd = (e) => {\r\n    if (this.props.allowOnlyPointerType == 'all' ||\r\n    e.pointerType == this.props.allowOnlyPointerType ){\r\n    this.interactionSM = this.interactionSM.handleDrawEnd(e, this);\r\n    this.mouseHasMoved = true;\r\n    }\r\n  };\r\n\r\n  applyView = () => {\r\n    if (!this.ctx.drawing) {\r\n      return;\r\n    }\r\n\r\n    canvasTypes\r\n      .map((name) => this.ctx[name])\r\n      .forEach((ctx) => {\r\n        this.clearWindow(ctx);\r\n        const m = this.coordSystem.transformMatrix;\r\n        ctx.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\r\n      });\r\n\r\n    if (!this.deferRedrawOnViewChange) {\r\n      this.drawGrid(this.ctx.grid);\r\n      this.redrawImage();\r\n      this.loop({ once: true });\r\n\r\n      const lines = this.lines;\r\n      this.lines = [];\r\n      this.simulateDrawingLines({ lines, immediate: true });\r\n    }\r\n  };\r\n\r\n  handleCanvasResize = (entries) => {\r\n    const saveData = this.getSaveData();\r\n    this.deferRedrawOnViewChange = true;\r\n    try {\r\n      for (const entry of entries) {\r\n        const { width, height } = entry.contentRect;\r\n        this.setCanvasSize(this.canvas.interface, width, height);\r\n        this.setCanvasSize(this.canvas.drawing, width, height);\r\n        this.setCanvasSize(this.canvas.temp, width, height);\r\n        this.setCanvasSize(this.canvas.grid, width, height);\r\n\r\n        this.coordSystem.documentSize = { width, height };\r\n        this.drawGrid(this.ctx.grid);\r\n        this.drawImage();\r\n        this.loop({ once: true });\r\n      }\r\n      this.loadSaveData(saveData, true);\r\n    } finally {\r\n      this.deferRedrawOnViewChange = false;\r\n    }\r\n  };\r\n\r\n  ///// Helpers\r\n\r\n  clampPointToDocument = (point) => {\r\n    if (this.props.clampLinesToDocument) {\r\n      return {\r\n        x: Math.max(Math.min(point.x, this.props.canvasWidth), 0),\r\n        y: Math.max(Math.min(point.y, this.props.canvasHeight), 0),\r\n      };\r\n    } else {\r\n      return point;\r\n    }\r\n  };\r\n\r\n  redrawImage = () => {\r\n    this.image &&\r\n      this.image.complete &&\r\n      drawImage({ ctx: this.ctx.grid, img: this.image });\r\n  };\r\n\r\n  simulateDrawingLines = ({ lines, immediate }) => {\r\n    // Simulate live-drawing of the loaded lines\r\n    // TODO use a generator\r\n    let curTime = 0;\r\n    let timeoutGap = immediate ? 0 : this.props.loadTimeOffset;\r\n\r\n    lines.forEach((line) => {\r\n      const { points, brushColor, brushRadius } = line;\r\n\r\n      // Draw all at once if immediate flag is set, instead of using setTimeout\r\n      if (immediate) {\r\n\r\n\r\n       \r\n        \r\n          \r\n            // this.drawPoints({\r\n            //   points: points.slice(0, 1),\r\n            //   brushColor,\r\n            //   brushRadius,\r\n            // });\r\n    \r\n            // // Save line with the drawn points\r\n            // this.points = points;\r\n            // this.saveLine({ brushColor, brushRadius });\r\n\r\n\r\n        // Draw the points\r\n        this.drawPoints({\r\n          points,\r\n          brushColor,\r\n          brushRadius,\r\n        });\r\n\r\n        // Save line with the drawn points\r\n        this.points = points;\r\n        this.saveLine({ brushColor, brushRadius });\r\n        // this.saveLine({ brushColor, brushRadius });\r\n        //버그인지 오류 실수인지 saveLine이 2개있었음 참고\r\n        \r\n        return;\r\n\r\n\r\n\r\n      }\r\n       else {\r\n        \r\n      \r\n      // Use timeout to draw\r\n      for (let i = 1; i < points.length; i++) {\r\n        curTime += timeoutGap;\r\n        window.setTimeout(() => {\r\n          this.drawPoints({\r\n            points: points.slice(0, i + 1),\r\n            brushColor,\r\n            brushRadius,\r\n          });\r\n        }, curTime);\r\n      }\r\n\r\n      curTime += timeoutGap;\r\n      window.setTimeout(() => {\r\n        // Save this line with its props instead of this.props\r\n        this.points = points;\r\n        this.saveLine({ brushColor, brushRadius });\r\n      }, curTime);\r\n    }\r\n    });\r\n    \r\n  };\r\n\r\n  setCanvasSize = (canvas, width, height) => {\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    canvas.style.width = width;\r\n    canvas.style.height = height;\r\n  };\r\n\r\n  drawPoints = ({ points, brushColor, brushRadius }) => {\r\n    this.ctx.temp.lineJoin = \"round\";\r\n    this.ctx.temp.lineCap = \"round\";\r\n    this.ctx.temp.strokeStyle = (brushColor === \"erase\")\r\n    //||(penstate=== \"erase\")\r\n    ? \"#dbb7bb\" : brushColor;\r\n    \r\n    this.ctx.drawing.globalCompositeOperation = (brushColor === \"erase\")\r\n    //||(penstate=== \"erase\") \r\n    ? \"destination-out\" : (brushColor === \"shadow\")\r\n    //||(penstate=== \"shadow\")\r\n    ? \"destination-over\":\"source-over\";\r\n    // let radiusMul = 1;\r\n    // if(penstate=== \"erase\"){\r\n    //   radiusMul =  20;\r\n    // }\r\n    this.clearWindow(this.ctx.temp);\r\n   \r\n      // this.ctx.temp.lineWidth = brushRadius * 2*radiusMul;\r\n      this.ctx.temp.lineWidth = brushRadius * 2;\r\n    \r\n    \r\n    \r\n    \r\n    let p1 = points[0];\r\n    let p2 = points[1];\r\n\r\n    this.ctx.temp.moveTo(p2.x, p2.y);\r\n    this.ctx.temp.beginPath();\r\n\r\n    for (var i = 1, len = points.length; i < len; i++) {\r\n      // we pick the point between pi+1 & pi+2 as the\r\n      // end point and p1 as our control point\r\n      var midPoint = midPointBtw(p1, p2);\r\n      this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n      p1 = points[i];\r\n      p2 = points[i + 1];\r\n    }\r\n    // Draw last line as a straight line while\r\n    // we wait for the next point to be able to calculate\r\n    // the bezier control point\r\n    this.ctx.temp.lineTo(p1.x, p1.y);\r\n    \r\n    if((brushColor == \"shadow\")\r\n    //||(penstate=== \"shadow\")\r\n    ){\r\n      this.ctx.temp.closePath();\r\n      this.ctx.temp.fillStyle= '#DADADA';\r\n      // this.ctx.temp.fillStyle = 'rgba(255k, 0, 0, 0.5)';\r\n      this.ctx.temp.fill();\r\n    }\r\n    else{\r\n      this.ctx.temp.stroke();\r\n    }\r\n    \r\n  };\r\n\r\n  saveLine = ({ brushColor, brushRadius } = {}) => {\r\n    if (this.points.length < 2) return;\r\n    \r\n    // Save as new line\r\n    this.lines.push({\r\n      points: [...this.points],\r\n      brushColor: brushColor || this.props.brushColor,\r\n      brushRadius: brushRadius || this.props.brushRadius,\r\n    });\r\n\r\n    // Reset points array\r\n    this.points.length = 0;\r\n\r\n    // Copy the line to the drawing canvas\r\n    this.inClientSpace([this.ctx.drawing, this.ctx.temp], () => {\r\n      this.ctx.drawing.drawImage(\r\n        this.canvas.temp,\r\n        0,\r\n        0,\r\n        this.canvas.drawing.width,\r\n        this.canvas.drawing.height\r\n      );\r\n    });\r\n\r\n    // Clear the temporary line-drawing canvas\r\n    this.clearWindow(this.ctx.temp);\r\n\r\n    this.triggerOnChange();\r\n  };\r\n\r\n  triggerOnChange = () => {\r\n    this.props.onChange && this.props.onChange(this);\r\n  };\r\n\r\n  clearWindow = (ctx) => {\r\n    this.inClientSpace([ctx], () =>\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n    );\r\n  };\r\n\r\n  clearExceptErasedLines = () => {\r\n    this.lines = [];\r\n    this.valuesChanged = true;\r\n    this.clearWindow(this.ctx.drawing);\r\n    this.clearWindow(this.ctx.temp);\r\n  };\r\n\r\n  loop = ({ once = false } = {}) => {\r\n    if (this.mouseHasMoved || this.valuesChanged) {\r\n      const pointer = this.lazy.getPointerCoordinates();\r\n      const brush = this.lazy.getBrushCoordinates();\r\n      \r\n\r\n      this.drawInterface(this.ctx.interface, pointer, brush);\r\n      this.mouseHasMoved = false;\r\n      this.valuesChanged = false;\r\n    }\r\n\r\n    if (!once) {\r\n      window.requestAnimationFrame(() => {\r\n        this.loop();\r\n      });\r\n    }\r\n  };\r\n\r\n  inClientSpace = (ctxs, action) => {\r\n    ctxs.forEach((ctx) => {\r\n      ctx.save();\r\n      ctx.setTransform(\r\n        IDENTITY.a,\r\n        IDENTITY.b,\r\n        IDENTITY.c,\r\n        IDENTITY.d,\r\n        IDENTITY.e,\r\n        IDENTITY.f\r\n      );\r\n    });\r\n\r\n    try {\r\n      action();\r\n    } finally {\r\n      ctxs.forEach((ctx) => ctx.restore());\r\n    }\r\n  };\r\n\r\n  ///// Canvas Rendering\r\n\r\n  drawImage = () => {\r\n    if (!this.props.imgSrc) return;\r\n    \r\n    // Load the image\r\n    this.image = new Image();\r\n    // this.image.src = this.props.imgSrc;\r\n    // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\r\n    this.image.crossOrigin = \"anonymous\";\r\n\r\n    // Draw the image once loaded\r\n    this.image.onload = this.redrawImage;\r\n    this.image.src = this.props.imgSrc;\r\n  };\r\n\r\n  drawGrid = (ctx) => {\r\n    if (this.props.hideGrid) return;\r\n\r\n    this.clearWindow(ctx);\r\n\r\n    const gridSize = 25;\r\n    const { viewMin, viewMax } = this.coordSystem.canvasBounds;\r\n    const minx = Math.floor(viewMin.x / gridSize - 1) * gridSize;\r\n    const miny = Math.floor(viewMin.y / gridSize - 1) * gridSize;\r\n    const maxx = viewMax.x + gridSize;\r\n    const maxy = viewMax.y + gridSize;\r\n\r\n    ctx.beginPath();\r\n    ctx.setLineDash([5, 1]);\r\n    ctx.setLineDash([]);\r\n    ctx.strokeStyle = this.props.gridColor;\r\n    ctx.lineWidth = this.props.gridLineWidth;\r\n\r\n    if (!this.props.hideGridX) {\r\n      let countX = minx;\r\n      const gridSizeX = this.props.gridSizeX;\r\n      while (countX < maxx) {\r\n        countX += gridSizeX;\r\n        ctx.moveTo(countX, miny);\r\n        ctx.lineTo(countX, maxy);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n\r\n    if (!this.props.hideGridY) {\r\n      let countY = miny;\r\n      const gridSizeY = this.props.gridSizeY;\r\n      while (countY < maxy) {\r\n        countY += gridSizeY;\r\n        ctx.moveTo(minx, countY);\r\n        ctx.lineTo(maxx, countY);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  drawInterface = (ctx, pointer, brush) => {\r\n    if (this.props.hideInterface) return;\r\n\r\n    this.clearWindow(ctx);\r\n    \r\n    // Draw brush preview\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.brushColor;\r\n    ctx.arc(brush.x, brush.y, this.props.brushRadius, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // Draw mouse point (the one directly at the cursor)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(pointer.x, pointer.y, 2, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n\r\n    // // Draw catenary\r\n    // if (this.lazy.isEnabled()) {\r\n    //   ctx.beginPath();\r\n    //   ctx.lineWidth = 2;\r\n    //   ctx.lineCap = \"round\";\r\n    //   ctx.setLineDash([2, 4]);\r\n    //   ctx.strokeStyle = this.props.catenaryColor;\r\n    //   this.catenary.drawToCanvas(\r\n    //     this.ctx.interface,\r\n    //     brush,\r\n    //     pointer,\r\n    //     this.chainLength\r\n    //   );\r\n    //   ctx.stroke();\r\n    // }\r\n\r\n    // Draw brush point (the one in the middle of the brush preview)\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.props.catenaryColor;\r\n    ctx.arc(brush.x, brush.y, 1, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n  };\r\n}\r\n","/** \r\n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\r\n * Original By Ken Fyrstenberg Nilsen\r\n * \r\n * Note: img must be fully loaded or have correct width & height set.\r\n */\r\nexport default function drawImageProp({ctx, img, x, y, w, h, offsetX, offsetY} = {}) {\r\n  // Defaults\r\n  if (typeof x !== \"number\") x = 0;\r\n  if (typeof y !== \"number\") y = 0;\r\n  if (typeof w !== \"number\") w = ctx.canvas.width;\r\n  if (typeof h !== \"number\") h = ctx.canvas.height;\r\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\r\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\r\n\r\n  // keep bounds [0.0, 1.0]\r\n  if (offsetX < 0) offsetX = 0;\r\n  if (offsetY < 0) offsetY = 0;\r\n  if (offsetX > 1) offsetX = 1;\r\n  if (offsetY > 1) offsetY = 1;\r\n\r\n  var iw = img.width,\r\n    ih = img.height,\r\n    r = Math.min(w / iw, h / ih),\r\n    nw = iw * r, // new prop. width\r\n    nh = ih * r, // new prop. height\r\n    cx,\r\n    cy,\r\n    cw,\r\n    ch,\r\n    ar = 1;\r\n\r\n  // decide which gap to fill\r\n  if (nw < w) ar = w / nw;\r\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\r\n  nw *= ar;\r\n  nh *= ar;\r\n\r\n  // calc source rectangle\r\n  cw = iw / (nw / w);\r\n  ch = ih / (nh / h);\r\n\r\n  cx = (iw - cw) * offsetX;\r\n  cy = (ih - ch) * offsetY;\r\n\r\n  // make sure source rectangle is valid\r\n  if (cx < 0) cx = 0;\r\n  if (cy < 0) cy = 0;\r\n  if (cw > iw) cw = iw;\r\n  if (ch > ih) ch = ih;\r\n\r\n  // fill image in dest. rectangle\r\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\r\n}\r\n","import React, {  useEffect, useRef, useState } from 'react';\nimport CanvasDraw from \"./canvasDrawIndex\";\nimport Hotkeys from \"react-hot-keys\";\nimport GoogleLogin,{ GoogleLogout } from 'react-google-login';\nimport { gapi } from 'gapi-script';\n\nconst clientid=\"862685370563-4t7105h84itoh08cj5kbchvafjb3a7hi.apps.googleusercontent.com\";\nconst SCOPES=\"https://www.googleapis.com/auth/drive\"\nfunction App() {\n  \n  const [inputImage, setInputImage] = useState(null);\n  const [croppedImage, setCroppedImage] = useState(null);\n  const canvasRef = useRef();\n  const [isAndroid,setIsAndroid]=useState(false);\n  \n  const [croquisTime,setCroquisTime]=useState(60);\n  const allowPointerType=[\"all\",\"mouse\",\"touch\",\"pen\"]\n  const [pointerTypeIndex,setPointerTypeIndex]=useState(3)\n  //allowpointertype으로 터치허용유무설정가능 일단 펜만 가능하게함. 나중에하는걸로\n      const [min,setMin]=useState(0);\n      const [sec,setSec]=useState(0);\n      const time=useRef(croquisTime);\n      const timeId=useRef(null);\n      const [drawSetting,setDrawSetting]=useState({\n          croquisTimeDB:60,\n          brushRadius:0.6,\n          lazyRadius:1,\n          eraseRadius:10,\n          width:600,\n          height:600,\n\n\n      })\n  const [timeSetBottonToggle,setTimeSetBottonToggle]=useState(false);\n  const [brushColor,setBrushColor]=useState(\"#444\")\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      checkfolder();\n\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, []);\n  useEffect(() => {\n    function start() {\n    gapi.client.init({\n    clientId:clientid,\n    scope: SCOPES,\n      });\n       }\n      gapi.load('client:auth2', start);\n      \n       }, []);\n  useEffect(() => {\n    const storedDrawSetting = localStorage.getItem(\"drsettings\");\n    if (storedDrawSetting) {\n      setDrawSetting(JSON.parse(storedDrawSetting));\n    }\n    \n  }, []);\nuseEffect(()=> {localStorage.setItem(\"drsettings\",JSON.stringify(drawSetting))},[drawSetting])\n\n// const createfile=()=>{\n//   var accessToken = gapi.auth.getToken().access_token;\n//   // const metadata = {\n//   //   name: \"croquis\",\n//   //   mimeType: \"application/vnd.google-apps.folder\"\n//   // };\n// const fd = new FormData();\n// const currentDate = new Date().toISOString().slice(0, 10); // Get the current date in YYYY-MM-DD format\n// const fileName = currentDate + \".png\";\n// // fd.append('metadata', new Blob([JSON.stringify(metadata)], {type: 'application/json'}));\n// // fd.append('file', b64toBlob(this.state.body, \"image/png\"));\n// fd.append('file',croppedImage,fileName);\n\n// fetch('https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart', {\n//   method: 'POST',\n//   headers: {Authorization: 'Bearer ' + accessToken},\n//   body: fd\n// })\n// .then(response => response.json())\n// .then(jsonResp => { console.log(jsonResp) });\n// }\n// const createfile = () => {\n//   var accessToken = gapi.auth.getToken().access_token;\n//   const fd = new FormData();\n//   const currentDate = new Date().toISOString().slice(0, 10); // Get the current date in YYYY-MM-DD format\n//   const fileName = currentDate + \".png\";\n//   var metadata ={\n//     name: 'test.png'\n//   }\n//   // Create folder named \"croquis\"\n//   // fetch('https://www.googleapis.com/drive/v3/files', {\n//   //   method: 'POST',\n//   //   headers: {\n//   //     Authorization: 'Bearer ' + accessToken,\n//   //     'Content-Type': 'application/json'\n//   //   },\n//   //   body: JSON.stringify({\n//   //     name: 'croquis',\n//   //     mimeType: 'application/vnd.google-apps.folder'\n//   //   })\n//   // })\n//   // .then(response => response.json())\n//   // .then(jsonResp => {\n//   //   const folderId = jsonResp.id;\n//   // });\n//     // Convert the base64-encoded image to a Blob object\n//     fetch(croppedImage)\n//       .then(res => res.blob())\n//       .then(blob => {\n//         fd.append('file', blob,{\n//           filename: \"test.png\",\n//           contentType: \"image/png\",\n//         });\n//         fd.append('metadata', new Blob([JSON.stringify(metadata)], {type: 'application/json'}))\n      \n      \n      \n//         fetch(\"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart\", {\n//           method: \"POST\",\n//           body: fd,\n//           headers: { Authorization: \"Bearer \" + accessToken },\n//           credentials: \"same-origin\",\n//         })\n//           .then((res) => res.json())\n//           .then(console.log);\n      \n      \n//       })\n//         // fd.append('parents', folderId);\n\n//         // Upload image inside \"croquis\" folder\n     \n  \n// }\nconst checkfolder=()=>{\n  if(localStorage.getItem('parent_folder') == undefined){\n  fetch('https://www.googleapis.com/drive/v3/files?q=name%3D%27croquis%27%20and%20mimeType%3D%27application%2Fvnd.google-apps.folder%27&fields=files(id)', {\n  headers: {\n    Authorization: 'Bearer ' +window.gapi.auth.getToken().access_token,\n    'Content-Type': 'application/json'\n  }\n})\n  .then(response => response.json())\n  .then(data => {\n    if(data.files[0]){\n      console.log(\"get drive folder\")\n      localStorage.setItem('parent_folder',data.files[0].id);\n    }else{\n      createfolder();\n      console.log(\"create drive folder\")\n    }\n    })\n  .catch(error => console.error(error));\n  }\n}\nconst createfolder=()=>{\n  // Create folder named \"croquis\"\n  fetch('https://www.googleapis.com/drive/v3/files', {\n    method: 'POST',\n    headers: {\n      Authorization: 'Bearer ' + window.gapi.auth.getToken().access_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name: 'croquis',\n      mimeType: 'application/vnd.google-apps.folder'\n    })\n  })\n  .then(response => response.json())\n  .then(jsonResp => {\n    \n    localStorage.setItem('parent_folder',jsonResp.id);\n  });\n}\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst atobs=(input)=> {\n  let str = input.replace(/=+$/, '');\n  let output = '';\n\n  if (str.length % 4 == 1) {\n    throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (let bc = 0, bs = 0, buffer, i = 0;\n    buffer = str.charAt(i++);\n\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    buffer = chars.indexOf(buffer);\n  }\n\n  return output;\n}\nfunction dataURItoBlob(dataURI)\n{\n    var byteString = atobs(dataURI.split(',')[1]);\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++)\n    {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    var bb = new Blob([ab], { \"type\": mimeString });\n    return bb;\n}\nconst createfile=(imgs,names)=>{\n\nconst folder = localStorage.getItem(\"parent_folder\")\nconst metadata = {name: names+'.png',parents: [folder]};\nconst fd = new FormData();\nfd.append('metadata', new Blob([JSON.stringify(metadata)], {type: 'application/json'}));\nfd.append('file', dataURItoBlob(imgs) );\n\nfetch('https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart', {\n  method: 'POST',\n  headers: {Authorization: 'Bearer ' + window.gapi.auth.getToken().access_token},\n  body: fd\n})\n.then(response => response.json())\n.then(jsonResp => { console.log(jsonResp) });\n}\n  \n  // Function to handle image upload\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      setInputImage(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  \n  // Function to handle image cropping\n  const handleImageCrop = () => {\n    // Create a new image element\n    const img = new Image();\n    \n    // Set the src of the image element to the input image\n    //img.src = inputImage;\n    img.src=canvasRef.current.getDataURL();\n    img.onload = () => {\n      // Perform image cropping here\n    \n    // Create a canvas element\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    // Set the width and height of the canvas to the image width and height\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    // Draw the image on the canvas\n    ctx.drawImage(img, 0, 0);\n\n    // Get the pixel data from the canvas\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n    // Find the edges of the non-transparent part of the image\n    let top = imageData.height,\n        bottom = 0,\n        left = imageData.width,\n        right = 0;\n\n    for (let y = 0; y < imageData.height; y++) {\n      for (let x = 0; x < imageData.width; x++) {\n        const index = (y * imageData.width + x) * 4;\n        const alpha = imageData.data[index + 3];\n        if (alpha > 0) {\n          if (y < top) top = y;\n          if (y > bottom) bottom = y;\n          if (x < left) left = x;\n          if (x > right) right = x;\n        }\n      }\n    }\n\n    // Crop the image based on the edges\n    const croppedCanvas = document.createElement('canvas');\n    const croppedCtx = croppedCanvas.getContext('2d');\n    const croppedWidth = right - left + 1;\n    const croppedHeight = bottom - top + 1;\n    croppedCanvas.width = croppedWidth;\n    croppedCanvas.height = croppedHeight;\n    croppedCtx.drawImage(canvas, left, top, croppedWidth, croppedHeight, 0, 0, croppedWidth, croppedHeight);\n    setCroppedImage(croppedCanvas.toDataURL());\n    // const link = document.createElement('a');\n    const now = new Date();\nconst options = {\n  //weekday: 'long',\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric',\n  timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n  //timeZoneName: 'short'\n};\nconst timestamp = now.toLocaleString(Intl.DateTimeFormat().resolvedOptions().locale, options);\n    //const timestamp = new Date().toISOString().replace(/:/g, '-');\n    // link.download = `${timestamp}.png`;\n    createfile(croppedCanvas.toDataURL(),timestamp)\n    // link.href = croppedCanvas.toDataURL();\n    \n   // link.click();\n  };\n  };\nconst onClearClick= () => {\n      const ok = window.confirm(\"wanna clear this?\")\n        if(ok){\n          canvasRef.current.clear();\n            \n        }\n        \n    };\n     const onUndoClick= () => {\n        canvasRef.current.undo();\n    };\n     const onEraseClick= () => {\n        setBrushColor(\"erase\")\n        \n    };\n     const onShadowClick= () => {\n        setBrushColor(\"shadow\")\n        \n    };\n     const onBrushClick= () => {\n        setBrushColor(\"#444\")\n        \n    };\n    const handleCheckboxChange = (event) => {\n      if (event.target.checked) {\n        setPointerTypeIndex(3);\n      } else {\n        setPointerTypeIndex(0);\n      }\n    };\n    const responseGoogle = (response) => {\n  console.log(response);\n}\n\n  return (\n    <div>\n      <Hotkeys\n      keyName=\"ctrl+z,c,x\"\n      onKeyDown={(keyName, e, handle) => {\n        //console.log(\"test:onKeyDown\", keyName);\n        if (keyName == \"ctrl+z\") { onUndoClick(); }\n        if (keyName == \"c\") {\n          if (brushColor != \"erase\") { onEraseClick(); }\n          else if (brushColor == \"erase\") { onBrushClick(); }\n        }\n        if (keyName == \"x\") {\n          if (brushColor != \"shadow\") { onShadowClick(); }\n          else if (brushColor == \"shadow\") { onBrushClick(); }\n        }\n      } }\n    ></Hotkeys>\n    <div>- </div>\n  \n    <div style={{ float: 'left' }}>\n      <div>\n        <div  style={{ float: 'right' }}>\n        <button onClick={e=>{handleImageCrop();canvasRef.current.clear();}}>Save&Clear</button>      \n          <button onClick={handleImageCrop}>Save</button>\n          </div></div>\n<div>\n  \n      <div style={{ float: 'right' }}>\n              <label>Lazy:</label>\n              <input\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                style={{ width: \"30px\" }}\n                value={drawSetting.lazyRadius}\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, lazyRadius: e.target.value }))} />\n            </div>\n            <div style={{ float: 'right' }}>\n              {brushColor==\"erase\" ? (<>\n                <label>Erase Size:</label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"100\"\n                style={{ width: \"35px\" }}\n                value={drawSetting.eraseRadius}\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, eraseRadius: e.target.value }))} />\n\n              </>):(<>\n                <label>Brush Size:</label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"100\"\n                style={{ width: \"35px\" }}\n                value={drawSetting.brushRadius}\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, brushRadius: e.target.value }))} />\n              \n              </>)}\n              \n            </div>\n            <div style={{ float: 'right' }}>\n              <button onClick={onClearClick}>Clear</button>\n            </div>\n            \n            <div style={{ float: 'left' }}>\n            {isAndroid?(<><button style={{padding:\"15px\"}} onClick={onUndoClick}>◀</button></>):(<><button onClick={onUndoClick}>◀</button></>)}\n              \n            </div>\n\n            <div style={{ float: 'left' }}>\n              {(brushColor == \"erase\") ? (\n                <><button onClick={onBrushClick}>brush</button></>\n              ) : (<><button onClick={onEraseClick}>erase</button></>)}\n\n\n            </div>\n            <div style={{ float: 'left' }}>\n              {(brushColor == \"shadow\") ? (\n                <><button onClick={onBrushClick}>brush</button></>\n              ) : (<><button onClick={onShadowClick}>shadow</button></>)}\n\n            {brushColor}\n            </div>\n          \n\n\n            \n</div>\n\n         \n          <div style={{ float: 'right' }}>\n            <CanvasDraw\n              canvasWidth={parseInt(drawSetting.width)}\n              canvasHeight={parseInt(drawSetting.height)}\n              brushRadius={(brushColor==\"erase\") ? drawSetting.eraseRadius : drawSetting.brushRadius}\n              lazyRadius={drawSetting.lazyRadius}\n              ref={canvasRef}\n              brushColor={brushColor}\n              // enablePanAndZoom={true}  \n              allowOnlyPointerType={allowPointerType[pointerTypeIndex]} />\n          </div>\n          </div>\n          <label>\n        <input type=\"checkbox\" onChange={handleCheckboxChange} defaultChecked={true} />\n        Use pen\n      </label>\n<div>\n       <label>Canvas Size:</label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                style={{ width: \"45px\" }}\n                value={drawSetting.width}\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, width: e.target.value }))} />x\n                <input\n                type=\"number\"\n                min=\"1\"\n                style={{ width: \"45px\" }}\n                value={drawSetting.height}\n                onChange={e => setDrawSetting(prevState => ({ ...prevState, height: e.target.value }))} />\n              \n                </div>\n      <p>ctrl+z : undo</p>\n      <p>x : shadow</p>\n      <p> c : erase</p>\n      \n      <GoogleLogin\n    clientId={clientid}    \n    buttonText=\"Login\"\n    onSuccess={responseGoogle}\n    onFailure={responseGoogle}\n    //cookiePolicy={'single_host_origin'}\n    isSignedIn={true}\n  />\n      <GoogleLogout\n      clientId={clientid}\n      buttonText=\"Logout\"\n      onLogoutSuccess={e=>{console.log('SUCESS LOG OUT')}}\n      onFailure={e=>{console.log('Fail LOG OUT')}}\n    >\n    </GoogleLogout>\n      {/* <button onClick={createfile}>creat file in google drive</button> */}\n          {croppedImage && (\n        <>\n          <h2>Image:</h2>\n          <img src={croppedImage} alt=\"Cropped\" />\n        </>\n      )}\n      {/* <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} /> */}\n\n      {/* <h2>Image Upload</h2>\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\n      {inputImage && (\n        <>\n          <h2>Input Image:</h2>\n          <img src={inputImage} alt=\"Input\" />\n          <button onClick={handleImageCrop}>Crop Image</button>\n        </>\n      )}\n      {croppedImage && (\n        <>\n          <h2>Cropped Image:</h2>\n          <img src={croppedImage} alt=\"Cropped\" />\n        </>\n      )} */}\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n "],"sourceRoot":""}